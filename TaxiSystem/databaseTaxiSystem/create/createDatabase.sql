-- MySQL Script generated by MySQL Workbench
-- Wed Dec 13 17:54:40 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TaxiSystem
-- -----------------------------------------------------
-- 	Описание предметной области
-- Деятельность системы интернет такси организована следующим образом.
-- В системе активными лицами являются как обычные клиенты, которые регистрируются в системе сами, так и таксисты, которых регистрирует администратор. Как у клиента, так и у таксиста система собирает такие данные как логин и пароль, которые используются для входа в систему. По желанию они могут указать свое имя и фамилию. Кроме этого, таксисту назначается определенный автомобиль, если своего у таксиста не имеется.
-- Взаимодействие клиента и таксиста осуществляется следующим образом. Клиент делает заявку на вызов такси и указывает место назначения. Система показывает список свободных машин и предполагаемую цену поездки. Клиент выбирает понравившееся ему авто и делает заказ, в котором, исходный и конечный пути, и цена поездки. Водитель в это время должен ответить на заявку либо принятием, либо отказом. В случае отказа клиент может заказать другое такси. В случае принятия и оказания услуги, клиент может оставить отзыв таксисту и дать ему оценку от 1 до 5. 
-- В случае негативных действий со стороны клиентов или таксистов предусмотрены баны. Возможность оплаты заказа для клиента осуществляется не только с помощью денег, но и с помощью бонусов, называемых бонусными баллами, с помощью них можно снизить стоимость поездки, или же сделать ее бесплатной.
-- 

-- -----------------------------------------------------
-- Schema TaxiSystem
--
-- 	Описание предметной области
-- Деятельность системы интернет такси организована следующим образом.
-- В системе активными лицами являются как обычные клиенты, которые регистрируются в системе сами, так и таксисты, которых регистрирует администратор. Как у клиента, так и у таксиста система собирает такие данные как логин и пароль, которые используются для входа в систему. По желанию они могут указать свое имя и фамилию. Кроме этого, таксисту назначается определенный автомобиль, если своего у таксиста не имеется.
-- Взаимодействие клиента и таксиста осуществляется следующим образом. Клиент делает заявку на вызов такси и указывает место назначения. Система показывает список свободных машин и предполагаемую цену поездки. Клиент выбирает понравившееся ему авто и делает заказ, в котором, исходный и конечный пути, и цена поездки. Водитель в это время должен ответить на заявку либо принятием, либо отказом. В случае отказа клиент может заказать другое такси. В случае принятия и оказания услуги, клиент может оставить отзыв таксисту и дать ему оценку от 1 до 5. 
-- В случае негативных действий со стороны клиентов или таксистов предусмотрены баны. Возможность оплаты заказа для клиента осуществляется не только с помощью денег, но и с помощью бонусов, называемых бонусными баллами, с помощью них можно снизить стоимость поездки, или же сделать ее бесплатной.
-- 
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TaxiSystem` DEFAULT CHARACTER SET utf8 ;
USE `TaxiSystem` ;

-- -----------------------------------------------------
-- Table `TaxiSystem`.`Client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaxiSystem`.`Client` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Уникальный номер клиента. Введен из-за того что альтернативный ключ логин может быть слишком большим.',
  `login` VARCHAR(45) NOT NULL COMMENT 'Логин для входа в систему',
  `mail` VARCHAR(45) NOT NULL COMMENT 'email',
  `password` VARCHAR(45) NOT NULL COMMENT 'Пароль для входа',
  `name` VARCHAR(45) NULL COMMENT 'Имя клиента. ',
  `surname` VARCHAR(45) NULL COMMENT 'Фамилия клиента.',
  `bonusPoints` INT NOT NULL DEFAULT 0 COMMENT 'Колличество бонусных баллов у клиента. За бонусные баллы можно оплатить поездку. По умолчанию бонусов - 0.',
  `banStatus` TINYINT NOT NULL DEFAULT 0 COMMENT 'Поле показывающее имеет ли бан данный клиент. true - имеет, false - не имеет.',
  `role` VARCHAR(45) NOT NULL COMMENT 'Роль, нужна для идентификации пользоателя в системе.',
  UNIQUE INDEX `login` (`login` ASC),
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Используется для хранения записей о клиентах.';


-- -----------------------------------------------------
-- Table `TaxiSystem`.`Car`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaxiSystem`.`Car` (
  `number` CHAR(7) NOT NULL COMMENT 'Государственный номер машины формата, пример: 3333AD7.',
  `car` VARCHAR(45) NOT NULL COMMENT 'Марка и модель автомобиля. Не разбивал на отдельные таблицы марку и модель из-за того что в моей системе клиенту будут предъявлять марку и модель вместе. ',
  `colour` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`number`))
ENGINE = InnoDB
COMMENT = 'Используется для учета всех машин, имеющихся у таксопарка';


-- -----------------------------------------------------
-- Table `TaxiSystem`.`Taxi`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaxiSystem`.`Taxi` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Уникальный номер таксиста. Введен из-за того что альтернативный ключ логин может быть слишком большим.',
  `carNumber` CHAR(7) NOT NULL COMMENT 'Государственный номер машины, на которой ездит текущий таксист, является внешним ключем к таблице car. ',
  `login` VARCHAR(45) NOT NULL COMMENT 'логин для входа в систему',
  `password` VARCHAR(45) NOT NULL COMMENT 'пароль',
  `name` VARCHAR(45) NOT NULL COMMENT 'Имя таксиста.',
  `surname` VARCHAR(45) NOT NULL COMMENT 'Фамилия таксиста.',
  `availableStatus` TINYINT NOT NULL DEFAULT 0 COMMENT 'Поле показывающее доступен ли в данный момент таксист. Если в данный момент у него заказон нет, то значение true, если таксист не в системе или на заказе, то значение false.',
  `banStatus` TINYINT NOT NULL DEFAULT 0 COMMENT 'есть ли бан у тасиста',
  `role` VARCHAR(45) NOT NULL DEFAULT 'taxi' COMMENT 'Роль, нужна для идентификации пользоателя в системе.',
  INDEX `fk_Taxi_car1_idx` (`carNumber` ASC),
  UNIQUE INDEX `login` (`login` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_Taxi_car1`
    FOREIGN KEY (`carNumber`)
    REFERENCES `TaxiSystem`.`Car` (`number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'используется для хранения записей о таксистах.';


-- -----------------------------------------------------
-- Table `TaxiSystem`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaxiSystem`.`Order` (
  `order_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Уникальный номер (ключ) заказа, создавалься из-за того что cliend_id и taxi_id в качестве составного ключа не давали бы уникальность записей так как клиент может еще раз попасть к такому же таксисту. ',
  `client_id` INT NOT NULL COMMENT 'Внешний ключ клиента.',
  `taxi_id` INT NOT NULL COMMENT 'Внешний ключ таксиста.',
  `orderStatus` ENUM('rejected', 'accepted', 'processed', 'completed') NOT NULL DEFAULT 'processed' COMMENT 'Статус заказа. Как только клиент делает заказ статус заказа по имолчанию становиться processed (в ожидании). Таксист должен подтвердить (accepted) или отклонить (rejected) закад.В случае подтверждения клиент ждет свою машину, в случае отаза делает новый заказ.',
  `source_coord` VARCHAR(35) NOT NULL COMMENT 'Исходные координаты клиента.\n',
  `destiny_coord` VARCHAR(35) NOT NULL COMMENT 'Кординаты пункта назначения клиента.',
  `price` DECIMAL(10,2) NOT NULL COMMENT 'Цена поездки.',
  PRIMARY KEY (`order_id`),
  INDEX `fk_Client_has_Taxi_Taxi1_idx` (`taxi_id` ASC),
  INDEX `fk_Client_has_Taxi_Client1_idx` (`client_id` ASC),
  INDEX `order` (`client_id` ASC, `taxi_id` ASC),
  CONSTRAINT `fk_Client_has_Taxi_Taxi1`
    FOREIGN KEY (`taxi_id`)
    REFERENCES `TaxiSystem`.`Taxi` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Client_has_Taxi_Client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `TaxiSystem`.`Client` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Используется для хранения заказов клиентов. Является промежуточной таблицей, между Client и Taxi.';


-- -----------------------------------------------------
-- Table `TaxiSystem`.`Review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaxiSystem`.`Review` (
  `review_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Уникальный номер (ключ) отзыва, создавалься из-за того что cliend_id и taxi_id в качестве составного ключа не давали бы уникальность записей так как клиент может еще раз попасть к такому же таксисту.',
  `client_id` INT NOT NULL COMMENT 'Внишний ключ клиента.',
  `taxi_id` INT NOT NULL COMMENT 'Внешний ключ таксиста',
  `comment` TEXT NULL COMMENT 'Комментарий (отзыв) к таксисту. Может отсуствовать.',
  PRIMARY KEY (`review_id`),
  INDEX `fk_Client_has_Taxi_Taxi2_idx` (`taxi_id` ASC),
  INDEX `fk_client_has_Taxi_client_idx` (`client_id` ASC),
  INDEX `rewiew` (`client_id` ASC, `taxi_id` ASC),
  CONSTRAINT `fk_Client_has_Taxi_Taxi2`
    FOREIGN KEY (`taxi_id`)
    REFERENCES `TaxiSystem`.`Taxi` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_client_has_Taxi_Client2`
    FOREIGN KEY (`client_id`)
    REFERENCES `TaxiSystem`.`Client` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Используется для хранения отзывов о таксистах. Является промежуточной таблицей, между Client и Taxi.';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
